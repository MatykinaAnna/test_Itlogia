{"ast":null,"code":"export class Ticket {\n  constructor(price, carrier, segments) {\n    this._price = price;\n    this._carrier = carrier;\n    this.segments = segments;\n  }\n\n  timeString(d) {\n    let time = '';\n\n    if (d.getHours() < 10) {\n      time += '0';\n    }\n\n    time += d.getHours() + ':';\n\n    if (d.getMinutes() < 10) {\n      time += '0';\n    }\n\n    time += d.getMinutes();\n    return time;\n  }\n\n  getTimeString(numSegments) {\n    let time = this.timeString(new Date(this.segments[numSegments].date));\n    let d = new Date(this.segments[numSegments].date);\n    d.setMinutes(d.getMinutes() + this.segments[numSegments].duration);\n    time = time + ' - ' + this.timeString(d);\n    return time;\n  }\n\n  travelTime(numSegments) {\n    return `${Math.round(this.segments[numSegments].duration / 60)}ч ${this.segments[numSegments].duration % 60}мин`;\n  }\n\n  getStops(numSegments) {\n    return this.segments[numSegments].stops.length;\n  }\n\n  div(val, by) {\n    return (val - val % by) / by;\n  }\n\n  get price() {\n    return this._price;\n  }\n\n  getPriceString() {\n    let rezult = [];\n    let p = this._price;\n\n    while (p > 0) {\n      rezult.push((p % 1000).toString());\n      p = this.div(p, 1000);\n    }\n\n    let rezult1 = '';\n\n    for (let i = rezult.length - 1; i >= 0; i--) {\n      if (i != rezult.length - 1) {\n        if (Number(rezult[i]) < 100 && Number(rezult[i]) > 10) {\n          rezult1 += '0';\n        }\n\n        if (Number(rezult[i]) < 10) {\n          rezult1 += '00';\n        }\n\n        rezult1 += rezult[i];\n      } else {\n        rezult1 += rezult[i];\n      }\n\n      rezult1 += ' ';\n    }\n\n    return rezult1;\n  }\n\n  get carrier() {\n    return this._carrier;\n  }\n\n  get duration() {\n    return this.segments[0].duration + this.segments[1].duration;\n  }\n\n  get flightTimeThere() {\n    let d = new Date(this.segments[0].date);\n    console.log(d);\n    return d;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}